# for examples

export COLOR_NC='\e[0m' # No Color
export COLOR_WHITE='\e[1;37m'
export COLOR_BLACK='\e[0;30m'
export COLOR_BLUE='\e[0;34m'
export COLOR_LIGHT_BLUE='\e[1;34m'
export COLOR_GREEN='\e[0;32m'
export COLOR_LIGHT_GREEN='\e[1;32m'
export COLOR_CYAN='\e[0;36m'
export COLOR_LIGHT_CYAN='\e[1;36m'
export COLOR_RED='\e[0;31m'
export COLOR_LIGHT_RED='\e[1;31m'
export COLOR_PURPLE='\e[0;35m'
export COLOR_LIGHT_PURPLE='\e[1;35m'
export COLOR_BROWN='\e[0;33m'
export COLOR_YELLOW='\e[1;33m'
export COLOR_GRAY='\e[0;30m'
export COLOR_LIGHT_GRAY='\e[0;37m'

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=3000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
#case "$TERM" in
#    xterm-color) color_prompt=yes;;
#esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

PS1='\n┌─[\u@\h][\w]\n└─~> '

#if [ "$color_prompt" = yes ]; then
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#else
    #PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
#fi
#unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
#case "$TERM" in
#xterm*|rxvt*)
    #PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
		#PS1='\n┌─[\u@\h][\w]\n└─\$=> '
    #;;
#*)
    #;;
#esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -lF'
alias la='ls -A'
alias l='ls -CF'

# my aliases
alias rbu='cd /home/dio/projekte/rbu/gitrepo/pizza_man'
alias lock='i3lock -d -c 000000'
alias h='history'
alias c='clear'
alias goodnight='sudo /etc/acpi/sleep.sh'
alias gn='sudo /etc/acpi/sleep.sh'
alias ai='sudo apt-get install'
alias ar='sudo apt-get remove'
alias ash='apt-cache show'
alias ase='apt-cache search'
alias youvid=youtube-dl-vid
alias youvidlow=youtube-dl-vid-low
alias yoump3=youtube-dl-mp3
alias youplay=youtube-dl-mp3-playlist
alias youplayvid=youtube-dl-video-playlist
#alias locate=loc
alias 2mp3=twomp3
alias hpdown=download_website

# download websites
download_website() {
  wget -rNcmk "$1"
}

# dateien in mp3 umwandeln
twomp3() {
	for i in *.mp4; do
  	avconv -vn -i "$i" -f mp3 -ab 256k "$i".mp3;
	done
}

# locate should ignore capitalization
loc() {
  locate -i "$1"
}

# download video from youtube in 720p quality
youtube-dl-vid() {
youtube-dl --restrict-filenames -o "%(title)s.%(ext)s" -wci "$1"
#youtube-dl --restrict-filenames -o "%(title)s.%(ext)s" -wci --max-quality=22 $1
}

# download video from youtube in 480p quality
youtube-dl-vid-low() {
youtube-dl --restrict-filenames -o "%(title)s.%(ext)s" -wci --max-quality=18 "$1"
}

# download video from youtube and encode in mp3
youtube-dl-mp3() {
youtube-dl -o "%(title)s.%(ext)s" --restrict-filenames --max-quality 22 -wci --extract-audio --audio-format mp3 "$1"
}

# download playlist from youtube and encode in mp3 starting at item $1
youtube-dl-mp3-playlist() {
youtube-dl -o "%(title)s.%(ext)s" --restrict-filenames --max-quality 22 -wci --extract-audio --audio-format mp3 --playlist-start "$1" "$2"
}

# download video playlist from youtube
youtube-dl-video-playlist() {
youtube-dl -o "%(title)s.%(ext)s" --restrict-filenames --max-quality 22 -wci  --playlist-start "$1" "$2"
}


# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# script for showing a diff between two latex/pdf versions in the pdf itself
function git-latexdiff {
    if [[ $# != 2 ]];
    then
        printf "\tusage: git-latexdiff <file> <back-revision>  \n";
    elif [[ $2 -lt 0 ]];
    then
        printf "\t<Back-revision> must be positive\n";
    else
        dire=$(dirname "$PWD"/"$1");
        based=$(git rev-parse --show-toplevel);
        git show HEAD~"$2":$(echo "$dire"| sed 's!'$(echo "$based")'/!!')/"$1" > "$1_diff.tmp";
        latexdiff "$1" "$1_diff.tmp" > "$1_diff.tex";
        pdflatex "$1_diff.tex";
        evince "$1_diff.pdf";
        rm "$1_diff*";
    fi;
}

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# disable flow control to enable ^Q and ^S
stty -ixon

# if you press enter without anything written after the prompt this will
# automatically call 'ls' or show the git status if you are in a git repository
magic-enter() {
if [[ -z "$PROMPT" ]]; then
  echo "buffer leer"
    if [[ -d .git ]]; then
      git status
    else
      ls -CF
    fi
  #echo ""
  # zle redisplay
else
  echo "buffer voll"
  # zle accept-line
fi
}

# bash magic-enter
#bind '"\C-M": "magic-enter\n"'


# use xterm with 256 colors as default terminal
#export TERM="screen-256color"
export TERM="xterm-256color"

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
